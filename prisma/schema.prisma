generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Employee {
  id           Int      @id @default(autoincrement())
  name         String   @db.VarChar(100)
  position     String   @db.VarChar(50)
  startDate    DateTime @map("start_date") @db.Date
  workTime     DateTime @map("work_time") @db.Time(6)
  hoursPerDay  Int      @map("hours_per_day")
  workSchedule String   @map("work_schedule") @db.VarChar(50)

  @@map("employees")
}

model Country {
  id        BigInt     @id @default(autoincrement())
  name      String?
  iso2      String
  iso3      String?
  localName String?    @map("local_name")
  continent Continent?

  @@map("countries")
}

model Category {
  categoryId   Int       @id @default(autoincrement()) @map("category_id")
  categoryName String?   @map("category_name") @db.VarChar(255)
  description  String?   @db.VarChar(255)
  products     Product[]

  @@map("categories")
}

model Customer {
  customerId   Int     @id @default(autoincrement()) @map("customer_id")
  customerName String? @map("customer_name") @db.VarChar(255)
  contactName  String? @map("contact_name") @db.VarChar(255)
  address      String? @db.VarChar(255)
  city         String? @db.VarChar(255)
  postalCode   String? @map("postal_code") @db.VarChar(255)
  country      String? @db.VarChar(255)
  orders       Order[]

  @@map("customers")
}

model OrderDetail {
  orderDetailId Int      @id @default(autoincrement()) @map("order_detail_id")
  orderId       Int?     @map("order_id")
  productId     Int?     @map("product_id")
  quantity      Int?
  order         Order?   @relation(fields: [orderId], references: [orderId], onDelete: NoAction, onUpdate: NoAction)
  product       Product? @relation(fields: [productId], references: [productId], onDelete: NoAction, onUpdate: NoAction)

  @@map("order_details")
}

model Order {
  orderId      Int           @id @default(autoincrement()) @map("order_id")
  customerId   Int?          @map("customer_id")
  orderDate    DateTime?     @map("order_date") @db.Date
  orderDetails OrderDetail[]
  customer     Customer?     @relation(fields: [customerId], references: [customerId], onDelete: NoAction, onUpdate: NoAction)

  @@map("orders")
}

model Product {
  productId    Int           @id @default(autoincrement()) @map("product_id")
  productName  String?       @map("product_name") @db.VarChar(255)
  categoryId   Int?          @map("category_id")
  unit         String?       @db.VarChar(255)
  price        Decimal?      @db.Decimal(10, 2)
  orderDetails OrderDetail[]
  category     Category?     @relation(fields: [categoryId], references: [categoryId], onDelete: NoAction, onUpdate: NoAction)

  @@map("products")
}

enum Continent {
  Africa
  Antarctica
  Asia
  Europe
  Oceania
  North_America @map("North America")
  South_America @map("South America")
}
